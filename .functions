# cd into whatever is the forefront Finder window.
cdf() {  # short for cdfinder
  cd "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

codef() {
  code "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

atomf() {
  atom "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

cleanPodCache() {
  rm -rf "${HOME}/Library/Caches/CocoaPods"
}

cleanPodFolderInCurrentDir() {
  rm -rf "`pwd`/Pods/"
}

cleanAndUpdatePods() {
  cleanPodCache
  cleanPodFolderInCurrentDir
  pod update
}

todoDo() {
  todo do "$@" && t ls
}

tOutAndInTo() {
	if [ -z "$1" ]
	then
		echo "Must have one parameter specifying what to have as a note!"
	else
		if [ "$2" ]
		then
			t out --at "$2" && t in --at "$2" "$1" && t today -v
		else
			t out && t in "$1" && t today -v
		fi
	fi
}

# List all branches which are missing upstream branch ('gone') and prompts if it should remove them or not. (not force delete!)
git_rm_all_gone_branches() {
	git fetch -p > /dev/null 2>&1
	git branch -vv | grep -v '^*' | grep ": gone]" | awk '{ print $1 " " $2 " " $3 " " $4 }'
	echo "Do you want to delete the branches above?"
	select yn in "Yes" "Yes, force-delete" "No"; do
		case $yn in
			Yes ) git branch -vv | grep ": gone]" | awk '{print $1}' | xargs -n 1 git branch -d; break;;
			"Yes, force-delete" )  git branch -vv | grep ": gone]" | awk '{print $1}' | xargs -n 1 git branch -D; break;;
			No ) return;;
		esac
	done
}